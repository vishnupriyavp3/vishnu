{"ast":null,"code":"import { EditData, Getdata, SetEditData } from '../service';\nimport { validatePassword, getPasswordHashResponse } from '../utils/PasswordHash';\nexport const GetAdminDetails = Userdata => async dispatch => {\n  const {\n    data\n  } = await Getdata('Admin');\n  if (validatePassword(data[0].Password, Userdata.Password) && Userdata.email === data[0].Email) {\n    dispatch({\n      type: 'LoginSuccess'\n    });\n  } else {\n    dispatch({\n      type: 'LoginFailed'\n    });\n  }\n};\nexport const GetClientData = () => async dispatch => {\n  const {\n    data\n  } = await Getdata('Client');\n  dispatch({\n    type: 'ClientData',\n    payload: data\n  });\n};\nexport const ClientEditData = id => async dispatch => {\n  const {\n    data\n  } = await EditData(`/Client/${id}`);\n  dispatch({\n    type: 'clientEditData',\n    payload: data\n  });\n};\nexport const GetInvoiceEditDetail = id => async dispatch => {\n  const {\n    data\n  } = await EditData(`Invoice/${id}`);\n  console.log(data);\n  dispatch({\n    type: 'InvoiceEditDetail',\n    payload: data\n  });\n};\nexport const GetInvoices = () => async dispatch => {\n  const {\n    data\n  } = await Getdata('Invoice');\n  dispatch({\n    type: 'INVOICE',\n    payload: data\n  });\n};\nexport const changePassword = values => async dispatch => {\n  const {\n    data\n  } = await Getdata('Admin');\n  if (validatePassword(data[0].Password, values.CurrentPassword)) {\n    let Password = getPasswordHashResponse(values.Password);\n    let value = {\n      Email: data[0].Email,\n      Password\n    };\n    SetEditData(`Admin/${1}`, value);\n    dispatch({\n      type: 'Validation_Success'\n    });\n  } else {\n    dispatch({\n      type: 'Validation_Failed'\n    });\n  }\n};","map":{"version":3,"names":["EditData","Getdata","SetEditData","validatePassword","getPasswordHashResponse","GetAdminDetails","Userdata","dispatch","data","Password","email","Email","type","GetClientData","payload","ClientEditData","id","GetInvoiceEditDetail","console","log","GetInvoices","changePassword","values","CurrentPassword","value"],"sources":["/home/vishnupriya/Desktop/12_Vishnupriya/src/action/index.js"],"sourcesContent":["import { EditData, Getdata, SetEditData } from '../service';\nimport {\n  validatePassword,\n  getPasswordHashResponse,\n} from '../utils/PasswordHash';\nexport const GetAdminDetails = (Userdata) => async (dispatch) => {\n  const { data } = await Getdata('Admin');\n\n  if (\n    validatePassword(data[0].Password, Userdata.Password) &&\n    Userdata.email === data[0].Email\n  ) {\n    dispatch({\n      type: 'LoginSuccess',\n    });\n  } else {\n    dispatch({\n      type: 'LoginFailed',\n    });\n  }\n};\nexport const GetClientData = () => async (dispatch) => {\n  const { data } = await Getdata('Client');\n  dispatch({\n    type: 'ClientData',\n    payload: data,\n  });\n};\nexport const ClientEditData = (id) => async (dispatch) => {\n  const { data } = await EditData(`/Client/${id}`);\n  dispatch({\n    type: 'clientEditData',\n    payload: data,\n  });\n};\nexport const GetInvoiceEditDetail = (id) => async (dispatch) => {\n  const { data } = await EditData(`Invoice/${id}`);\n  console.log(data);\n  dispatch({\n    type: 'InvoiceEditDetail',\n    payload: data,\n  });\n};\nexport const GetInvoices = () => async (dispatch) => {\n  const { data } = await Getdata('Invoice');\n  dispatch({\n    type: 'INVOICE',\n    payload: data,\n  });\n};\nexport const changePassword = (values) => async (dispatch) => {\n  const { data } = await Getdata('Admin');\n  if (validatePassword(data[0].Password, values.CurrentPassword)) {\n    let Password = getPasswordHashResponse(values.Password);\n    let value = {\n      Email: data[0].Email,\n      Password,\n    };\n    SetEditData(`Admin/${1}`, value);\n    dispatch({\n      type: 'Validation_Success',\n    });\n  } else {\n    dispatch({\n      type: 'Validation_Failed',\n    });\n  }\n};\n"],"mappings":"AAAA,SAASA,QAAQ,EAAEC,OAAO,EAAEC,WAAW,QAAQ,YAAY;AAC3D,SACEC,gBAAgB,EAChBC,uBAAuB,QAClB,uBAAuB;AAC9B,OAAO,MAAMC,eAAe,GAAIC,QAAQ,IAAK,MAAOC,QAAQ,IAAK;EAC/D,MAAM;IAAEC;EAAK,CAAC,GAAG,MAAMP,OAAO,CAAC,OAAO,CAAC;EAEvC,IACEE,gBAAgB,CAACK,IAAI,CAAC,CAAC,CAAC,CAACC,QAAQ,EAAEH,QAAQ,CAACG,QAAQ,CAAC,IACrDH,QAAQ,CAACI,KAAK,KAAKF,IAAI,CAAC,CAAC,CAAC,CAACG,KAAK,EAChC;IACAJ,QAAQ,CAAC;MACPK,IAAI,EAAE;IACR,CAAC,CAAC;EACJ,CAAC,MAAM;IACLL,QAAQ,CAAC;MACPK,IAAI,EAAE;IACR,CAAC,CAAC;EACJ;AACF,CAAC;AACD,OAAO,MAAMC,aAAa,GAAG,MAAM,MAAON,QAAQ,IAAK;EACrD,MAAM;IAAEC;EAAK,CAAC,GAAG,MAAMP,OAAO,CAAC,QAAQ,CAAC;EACxCM,QAAQ,CAAC;IACPK,IAAI,EAAE,YAAY;IAClBE,OAAO,EAAEN;EACX,CAAC,CAAC;AACJ,CAAC;AACD,OAAO,MAAMO,cAAc,GAAIC,EAAE,IAAK,MAAOT,QAAQ,IAAK;EACxD,MAAM;IAAEC;EAAK,CAAC,GAAG,MAAMR,QAAQ,CAAE,WAAUgB,EAAG,EAAC,CAAC;EAChDT,QAAQ,CAAC;IACPK,IAAI,EAAE,gBAAgB;IACtBE,OAAO,EAAEN;EACX,CAAC,CAAC;AACJ,CAAC;AACD,OAAO,MAAMS,oBAAoB,GAAID,EAAE,IAAK,MAAOT,QAAQ,IAAK;EAC9D,MAAM;IAAEC;EAAK,CAAC,GAAG,MAAMR,QAAQ,CAAE,WAAUgB,EAAG,EAAC,CAAC;EAChDE,OAAO,CAACC,GAAG,CAACX,IAAI,CAAC;EACjBD,QAAQ,CAAC;IACPK,IAAI,EAAE,mBAAmB;IACzBE,OAAO,EAAEN;EACX,CAAC,CAAC;AACJ,CAAC;AACD,OAAO,MAAMY,WAAW,GAAG,MAAM,MAAOb,QAAQ,IAAK;EACnD,MAAM;IAAEC;EAAK,CAAC,GAAG,MAAMP,OAAO,CAAC,SAAS,CAAC;EACzCM,QAAQ,CAAC;IACPK,IAAI,EAAE,SAAS;IACfE,OAAO,EAAEN;EACX,CAAC,CAAC;AACJ,CAAC;AACD,OAAO,MAAMa,cAAc,GAAIC,MAAM,IAAK,MAAOf,QAAQ,IAAK;EAC5D,MAAM;IAAEC;EAAK,CAAC,GAAG,MAAMP,OAAO,CAAC,OAAO,CAAC;EACvC,IAAIE,gBAAgB,CAACK,IAAI,CAAC,CAAC,CAAC,CAACC,QAAQ,EAAEa,MAAM,CAACC,eAAe,CAAC,EAAE;IAC9D,IAAId,QAAQ,GAAGL,uBAAuB,CAACkB,MAAM,CAACb,QAAQ,CAAC;IACvD,IAAIe,KAAK,GAAG;MACVb,KAAK,EAAEH,IAAI,CAAC,CAAC,CAAC,CAACG,KAAK;MACpBF;IACF,CAAC;IACDP,WAAW,CAAE,SAAQ,CAAE,EAAC,EAAEsB,KAAK,CAAC;IAChCjB,QAAQ,CAAC;MACPK,IAAI,EAAE;IACR,CAAC,CAAC;EACJ,CAAC,MAAM;IACLL,QAAQ,CAAC;MACPK,IAAI,EAAE;IACR,CAAC,CAAC;EACJ;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}